#!/bin/bash

# Ensure a parameter is provided
if [ -z "$1" ]; then
  echo "Usage: $0 <corner>"
  echo "<corner> can be one of: top-left, top-right, bottom-left, bottom-right"
  exit 1
fi

corner=$1

FLOATING_PARENT="$(i3-msg -t get_tree | jq '.. | .nodes? + .floating_nodes? | .[]? | select((.floating=="user_on" or .floating=="auto_on") and (.focused or (.. | .nodes? + .floating_nodes? | .[]? | .focused)))')"

# Get currently focused window
if [ -z "$FLOATING_PARENT" ]; then
  echo "Error: No active floating window found."
  exit 1
fi

# Get screen dimensions
# TODO get them using i3-msg -t get_tree and jq
SCREEN_WIDTH=$(xdotool getdisplaygeometry | awk '{print $1}')
SCREEN_HEIGHT=$(xdotool getdisplaygeometry | awk '{print $2}')


ID="$(echo "$FLOATING_PARENT" | jq '.id')"
WIDTH="$(echo "$FLOATING_PARENT" | jq '.rect.width')"
HEIGHT="$(echo "$FLOATING_PARENT" | jq '.rect.height')"


# Calculate positions based on the corner
case $corner in
  top-left)
    x=0
    y=0
    ;;
  top)
    x=$((SCREEN_WIDTH / 2 - WIDTH / 2))
    y=0
    ;;
  top-right)
    x=$((SCREEN_WIDTH - WIDTH))
    y=0
    ;;
  left)
    x=0
    y=$((SCREEN_HEIGHT / 2 - HEIGHT / 2))
    ;;
  center)
    x=$((SCREEN_WIDTH / 2 - WIDTH / 2))
    y=$((SCREEN_HEIGHT / 2 - HEIGHT / 2))
    ;;
  right)
    x=$((SCREEN_WIDTH - WIDTH))
    y=$((SCREEN_HEIGHT / 2 - HEIGHT / 2))
    ;;
  bottom-left)
    x=0
    y=$((SCREEN_HEIGHT - HEIGHT))
    ;;
  bottom)
    x=$((SCREEN_WIDTH / 2 - WIDTH / 2))
    y=$((SCREEN_HEIGHT - HEIGHT))
    ;;
  bottom-right)
    x=$((SCREEN_WIDTH - WIDTH))
    y=$((SCREEN_HEIGHT - HEIGHT))
    ;;
  *)
    echo "Invalid corner: $corner"
    echo "Valid corners are: top-left, top-right, bottom-left, bottom-right"
    exit 1
    ;;
esac

# Move the window
#xdotool windowmove "$window_id" "$x" "$y"
i3-msg "[con_id=$ID] move position $x $y"

echo "Moved window to $corner."
