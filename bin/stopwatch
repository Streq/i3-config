#!/bin/bash
BASE_PATH="$HOME/.stopwatch/"
ACTION="get"



usage()
{
    echo "usage: stopwatch [ [ -p | --path ] path ] [ -h | --help | start | stop | delete | add SECONDS | sub SECONDS | history ]"
}


while [ "$1" != "" ]; do
	case $1 in
		-p | --path ) 
			shift
			BASE_PATH="$1" 
			;;
    -h | --help )
      usage
      exit
      ;;
    add )
      ACTION="$1"
			shift
      ADDED_TIME="$1"
      ;;
    sub )
      ACTION="$1"
			shift
      ADDED_TIME="$1"
      ;;
		* )
			ACTION="$1"
			;;
	esac
  shift
done

ACCUM_FILE="${BASE_PATH}accum"
FILE="${BASE_PATH}start"
HISTORY_FILE="${BASE_PATH}history"




EMPTY="00:00:00"
TIME=0
ICON=""
RUNNING=0
ACCUM=0
EPOCH="$(date +%s)"

reset_accum () {
  echo "0" > $ACCUM_FILE;  
}


init () {
  mkdir -p $BASE_PATH
  if ! [ -f $ACCUM_FILE ]; then 
    reset_accum
  fi
  ACCUM="$(cat $ACCUM_FILE)"
  if ! [ -f $FILE ]; then 
    RUNNING=0
    TIME="$ACCUM"
  else
    RUNNING=1
    local start="$(cat $FILE)"
    TIME="$(($EPOCH - $start + $ACCUM))"
  fi
}

get_state () {
  if (( $RUNNING == 0 )); then 
    echo "stopped"
  else
    echo "running"
  fi

}

toggle () {
  if (( $RUNNING == 1 )); then
    off;
  else
    on;
  fi
}

on () {
  if (( $RUNNING == 1 )); then
    return
  fi
  echo "$TIME" > $ACCUM_FILE;
  echo "$EPOCH" > $FILE;
  RUNNING=1
}

off () {
  if (( $RUNNING == 0 )); then
    return
  fi
  echo "$TIME" > $ACCUM_FILE;
  rm $FILE
  RUNNING=0
}

delete () {
  reset_accum;
  rm $FILE &> /dev/null;
  TIME=0
  RUNNING=0
}

add () {
  #local seconds=$(date -u -d "1970-01-01 $1" +"%s")
  local seconds=$1
  ACCUM="$(($ACCUM + $seconds))"
  echo "$ACCUM" > $ACCUM_FILE;
  TIME="$(($TIME + $seconds))"
}

sub () {
  local seconds=$1
  ACCUM="$(($ACCUM - $seconds))"
  echo "$ACCUM" > $ACCUM_FILE;
  TIME="$(($TIME - $seconds))"
}

log_to_history () {

  local action=$ACTION
  if ! [ -z "$ADDED_TIME" ]; then
    action="$action $ADDED_TIME" 
  fi

  echo "$EPOCH,$action" >> $HISTORY_FILE
}


get() {
  echo "state:$STATE,time:$(date -u -d "@$TIME" +%s)"
}

init

if [ "$ACTION" == "toggle" ]; then
  if [ $RUNNING == 1 ]; then
    ACTION=stop
  else
    ACTION=start
  fi
elif [ "$ACTION" == "start" ] && [ $RUNNING == 1 ]; then
  ACTION=get
elif [ "$ACTION" == "stop" ] && [ $RUNNING == 0 ]; then
  ACTION=get
fi

case $ACTION in
  start) on ;;
  stop) off ;;
  delete) delete ;;
  add) add $ADDED_TIME ;;
  sub) sub $ADDED_TIME ;;
  history) cat $HISTORY_FILE; exit ;;
  get) ;;
  *) usage; exit ;;
esac

STATE="$(get_state)"

if [ $ACTION != "get" ]; then
  log_to_history
fi

# echo "state:$STATE, time:$(date -u -d "@$TIME" +%H:%M:%S)"
get